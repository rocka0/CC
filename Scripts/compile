#!/usr/bin/python

from blessings import Terminal
from time import time
from os import system
from sys import argv

if len(argv) == 2:
    MAIN_CODE_BASE_NAME = argv[1]
else:
    MAIN_CODE_BASE_NAME = "app"

MAIN_CODE_EXTENSION = "cpp"
MAIN_CODE_FILE = MAIN_CODE_BASE_NAME + '.' + MAIN_CODE_EXTENSION

term = Terminal()

def exec(cmd):
    return system(cmd) == 0

def compile(debug=False):
    start_time = time()
    if debug:
        executed = exec(f"g++ -Wall -Wextra -pedantic -std=c++17 -O2 -Wshadow -Wformat=2 -Wfloat-equal -Wconversion -Wlogical-op -Wshift-overflow=2 -Wduplicated-cond -Wcast-qual -Wcast-align -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC -D_FORTIFY_SOURCE=2 -fsanitize=address -fsanitize=undefined -fno-sanitize-recover -fstack-protector {MAIN_CODE_FILE} -o {MAIN_CODE_BASE_NAME}")
    else:
        executed = exec(f"g++ -std=c++17 -O2 {MAIN_CODE_FILE} -o {MAIN_CODE_BASE_NAME}")
    delta = str(round(time()-start_time, 3)) + 's'
    return (executed, delta)

def main():
    # Use compile(True) for debug flags
    success, compile_time = compile()

    if not success:
        print(term.bold(term.red(f"[FAIL] {MAIN_CODE_FILE} compilation failed")))
        exit(1)
    else:
        print(term.bold(term.green(f"[OK] {MAIN_CODE_FILE} compiled")))
        print(term.blue("Compile Time: "), term.bold(term.green((compile_time))))
        return 0

if __name__ == '__main__':
    main()
